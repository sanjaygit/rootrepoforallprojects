<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.transience.sandbox</groupId>
  <artifactId>expenseswebapp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>expenseswebapp</name>
  <description>expenseswebapp</description>

  
	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java-version>1.6</java-version>
        <org.springframework-version>3.1.0.RELEASE</org.springframework-version>
        <org.springframework.security-version>3.1.3.RELEASE</org.springframework.security-version>
        <org.aspectj-version>1.7.0</org.aspectj-version>        
        <org.slf4j-version>1.7.2</org.slf4j-version>
        <ch.qos.logback-version>1.0.7</ch.qos.logback-version>
        <org.apache.tiles-version>3.0.1</org.apache.tiles-version>
    </properties>
    <repositories>
        <repository>
            <id>java.net2</id>
            <name>Repository hosting the jee6 artifacts</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
        <repository>
            <id>sonatype-oss-repository</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    
      
  <dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.1</version>
		</dependency>    
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework-version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>    
		
        <!-- Persistence -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.6.8.Final</version>
        </dependency>
        
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>10.2.0.3.0</version>
        </dependency>


		<!-- JSTL -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

<!-- 	<dependency> -->
<!-- 		<groupId>javax.servlet</groupId> -->
<!-- 		<artifactId>servlet-api</artifactId> -->
<!-- 		<version>2.5</version> -->
<!-- 	</dependency> -->

	<dependency>
		<groupId>javax</groupId>
		<artifactId>javaee-web-api</artifactId>
		<version>6.0</version>
	</dependency>

        
     <!-- For CSV parsing -->
	<dependency>
		<groupId>net.sf.opencsv</groupId>
		<artifactId>opencsv</artifactId>
		<version>2.3</version>
	</dependency>
     
	<dependency>
		<groupId>net.sf.supercsv</groupId>
		<artifactId>super-csv</artifactId>
		<version>2.1.0</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.1</version>
	</dependency>
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3</version>
	</dependency>
	
	<!--  Google Guava - For splitting and tokenizing strings etc -->
<!-- 	<dependency> -->
<!-- 		<groupId>com.google.guava</groupId> -->
<!-- 		<artifactId>guava</artifactId> -->
<!-- 		<version>r05</version> -->
<!-- 	</dependency> -->
            
	<!-- end  Google Guava-->
	            	
		<!-- Jackson -->
	<dependency>
	    <groupId>org.codehaus.jackson</groupId>
	    <artifactId>jackson-core-lgpl</artifactId>
	    <version>1.3.0</version>
	</dependency>
	<dependency>
	    <groupId>org.codehaus.jackson</groupId>
	    <artifactId>jackson-mapper-lgpl</artifactId>
	    <version>1.3.0</version>
	</dependency>
	<dependency>
	    <groupId>org.codehaus.jackson</groupId>
	    <artifactId>jackson-xc</artifactId>
	    <version>1.3.0</version>
	</dependency>

<!-- For batch parsing expense data -->
<dependency>
	<groupId>org.springframework.batch</groupId>
	<artifactId>spring-batch-core</artifactId>
	<version>2.0.3.RELEASE</version>
</dependency>

<dependency>
	<groupId>javax</groupId>
	<artifactId>javaee-api</artifactId>
	<version>6.0</version>
	<scope>provided</scope>
</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
		</dependency>

        <dependency>  
            <groupId>javax.validation</groupId>  
            <artifactId>validation-api</artifactId>  
            <version>1.0.0.GA</version>  
        </dependency>  
            		
  </dependencies>
  <build>
    <finalName>ExpensesWebapp</finalName>
	<plugins> 
			 
			<plugin>
				<groupId>com.oracle.weblogic</groupId>
				<artifactId>wls-maven-plugin</artifactId>
				<version>12.1.1.0</version>
				<configuration>
					<user>weblogic</user>
					<password>weblogic123</password>
					<name>${project.build.finalName}</name>
					<artifactLocation>com.oracle.weblogic:wls-dev:zip:12.1.1.0</artifactLocation>
					<middlewareHome>D:/weblogic12.1.1_OEPE_Coherence/Middleware</middlewareHome>
					<weblogicHome>wlserver_12.1</weblogicHome>
					<domainHome>D:/weblogic12.1.1_OEPE_Coherence/Middleware/user_projects/domains/comprehensiveappdomain</domainHome>
					<adminurl>t3://localhost:7001</adminurl>					
				</configuration>
				<!-- 
				<executions>
					
					<execution>
						<id>RM-WAR</id>
						<phase>install</phase>
						<goals>
							<goal>undeploy</goal>
						</goals>
					</execution>
					 
					<execution>
						<id>WLS-SETUP</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
					
				</executions>
				 -->
			</plugin>
		
		
		      <!-- Embedded Glassfish v3 prelude (glassfish:run) -->
      <plugin>
         <groupId>org.glassfish</groupId>
         <artifactId>maven-glassfish-plugin</artifactId>
         <version>1.0-alpha-4</version>
         <configuration>
            <!-- technically optional, but helpful to declare explicitly. -->
            <!-- I personally put all 3 containers on different ports. -->
            <!-- This allows me to test them simultaneously. -->
            <httpPort>8070</httpPort>   
         </configuration>
      </plugin>
      <!-- Jetty Launcher Plug-in -->
                        <plugin>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jetty-maven-plugin</artifactId>
                                <version>8.1.10.v20130312</version>
                                <configuration>
                                        <!--<stopPort>${jettyStopPort}</stopPort>-->
                                        <stopKey>keyStop</stopKey>
                                        <scanIntervalSeconds>15</scanIntervalSeconds>
                                        <webAppConfig>
                                                <contextPath>/expenseswebapp</contextPath>
                                                  <sessionHandler implementation="org.eclipse.jetty.server.session.SessionHandler">  
                                                    <sessionManager implementation="org.eclipse.jetty.server.session.HashSessionManager">  
                                                      <sessionIdPathParameterName>none</sessionIdPathParameterName>  
                                                    </sessionManager>  
                                                  </sessionHandler>
                                        </webAppConfig>
                                </configuration>
 
                                <executions>
                                        <execution>
                                                <id>start-jetty</id>
                                                <goals>
                                                        <goal>run</goal>
                                                </goals>
                                                <configuration>
                                                        <scanIntervalSeconds>0</scanIntervalSeconds>
                                                        <daemon>true</daemon>
                                                </configuration>
                                        </execution>
                                        <execution>
                                                <id>stop-jetty</id>
                                                <goals>
                                                        <goal>stop</goal>
                                                </goals>
                                                <configuration>
                                                        <stopKey>keyStop</stopKey>
                                                        <stopPort>9967</stopPort>
                                                </configuration>
                                        </execution>
                                </executions>
                        </plugin>
                        
                              <!-- embedded tomcat (tomcat:run) -->
      <plugin>
         <groupId>org.codehaus.mojo</groupId>
         <artifactId>tomcat-maven-plugin</artifactId>
			<configuration>
			    <port>8383</port>
			    <useTestClasspath>true</useTestClasspath>
			</configuration>
      </plugin>
	</plugins>  
</build>
  
</project>